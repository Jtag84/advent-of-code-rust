use crate::lib::parser_commons::{number, read_file_to_string};
use nom::character::complete::space1;
use nom::multi::separated_list1;

pub type ParsedInput = Vec<usize>;

pub fn parse_input(input_path: &str) -> ParsedInput {
    let file_string = read_file_to_string(input_path);

    let (_, stones) = separated_list1(space1, number)(&file_string).expect("Parse error");
    stones
}

#[cfg(test)]
mod test {
    use crate::year<YEAR>::day<DAY>::lib::YEAR_<YEAR>_DAY_<DAY>_SOLUTION;

    #[test]
    fn test_parser_part1() {
        let parsed = YEAR_<YEAR>_DAY_<DAY>_SOLUTION.get_parsed_test_inputs(1);
        println!("Result = {:?}", parsed);
    }

    #[test]
    fn test_parser_part2() {
        let parsed = YEAR_<YEAR>_DAY_<DAY>_SOLUTION.get_parsed_test_inputs(2);
        println!("Result = {:?}", parsed);
    }
}